server {
  listen 80;

  if ($scheme = "http") {
    return 301 https://$host$request_uri;
  }

  listen [::]:443 ssl;
  listen 443 ssl;

  server_name {{ proxy_item.domain }};

  location /series {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Forwarded-Scheme $scheme;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Accept-Encoding "";
    proxy_set_header Host $host;
    proxy_redirect off;

    # Websocket
    proxy_http_version 1.1;
    proxy_set_header Connection $connection_upgrade;

    proxy_pass http://127.0.0.1:8989;
  }

  location / {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Forwarded-Scheme $scheme;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Accept-Encoding "";
    proxy_set_header Host $host;
    proxy_redirect off;

    # Websocket
    proxy_http_version 1.1;
    proxy_set_header Connection $connection_upgrade;

    proxy_pass http://127.0.0.1:7878;
  }

  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

  ssl_certificate /etc/letsencrypt/live/{{ proxy_item.cert }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ proxy_item.cert }}/privkey.pem;

  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
